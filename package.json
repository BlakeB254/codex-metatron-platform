{
  "name": "codex-metatron-platform",
  "version": "1.0.0",
  "license": "MIT",
  "type": "module",
  "scripts": {
    "validate:db": "node scripts/validate-database.js",
    "dev": "concurrently \"npm run dev:gateway\" \"npm run dev:admin\"",
    "dev:gateway": "cd services/api-gateway && npm run dev",
    "dev:crm": "cd services/crm-service && npm run dev",
    "dev:auth": "cd services/auth-service && npm run dev",
    "dev:notifications": "cd services/notification-service && npm run dev",
    "dev:analytics": "cd services/analytics-service && npm run dev",
    "dev:admin": "cd apps/cdx-pharaoh && npm run dev",
    "dev:client": "cd apps/client-template && npm run dev",
    "dev:services": "concurrently \"npm run dev:gateway\" \"npm run dev:crm\" \"npm run dev:auth\" \"npm run dev:notifications\" \"npm run dev:analytics\"",
    "dev:all": "concurrently \"npm run dev:services\" \"npm run dev:admin\"",
    "dev:legacy": "cd apps/core-server && npm run dev",
    "build": "nx run-many --target=build --all",
    "build:services": "concurrently \"cd services/api-gateway && npm run build\" \"cd services/crm-service && npm run build\"",
    "build:admin": "cd apps/cdx-pharaoh && npm run build",
    "build:client": "cd apps/client-template && npm run build",
    "test": "nx run-many --target=test --all",
    "test:services": "concurrently \"cd services/api-gateway && npm test\" \"cd services/crm-service && npm test\"",
    "test:ui": "cd libs/ui && npm test",
    "test:admin": "cd apps/cdx-pharaoh && npm test",
    "storybook": "cd libs/ui && npm run storybook",
    "build-storybook": "cd libs/ui && npm run build-storybook",
    "lint": "nx run-many --target=lint --all",
    "lint:fix": "nx run-many --target=lint --all --fix",
    "clean": "nx reset && rm -rf node_modules apps/*/node_modules packages/*/node_modules services/*/node_modules libs/*/node_modules",
    "install:all": "npm install && npm run install:services && npm run install:apps && npm run install:libs",
    "install:services": "cd services/api-gateway && npm install && cd ../crm-service && npm install",
    "install:apps": "cd apps/cdx-pharaoh && npm install && cd ../core-server && npm install",
    "install:libs": "cd libs/ui && npm install",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:build": "docker-compose build",
    "db:setup": "cd services/crm-service && npm run db:setup",
    "db:seed": "cd services/crm-service && npm run db:seed",
    "db:migrate": "cd services/crm-service && npm run db:migrate",
    "format": "prettier --write \"**/*.{ts,tsx,js,jsx,json,md}\"",
    "format:check": "prettier --check \"**/*.{ts,tsx,js,jsx,json,md}\"",
    "typecheck": "nx run-many --target=typecheck --all",
    "start": "concurrently \"npm run start:gateway\" \"npm run start:admin\"",
    "start:gateway": "cd services/api-gateway && npm start",
    "start:admin": "cd apps/cdx-pharaoh && npm run preview"
  },
  "private": true,
  "dependencies": {
    "@headlessui/react": "^2.2.4",
    "@types/pg": "^8.15.4",
    "axios": "^1.10.0",
    "bcrypt": "^6.0.0",
    "lucide-react": "^0.525.0",
    "pg": "^8.16.3",
    "react-router-dom": "^7.6.3",
    "recharts": "^3.1.0",
    "swr": "^2.3.4"
  },
  "devDependencies": {
    "@nx/js": "21.2.2",
    "@nx/storybook": "^21.2.2",
    "@swc-node/register": "~1.9.1",
    "@swc/core": "~1.5.7",
    "@swc/helpers": "~0.5.11",
    "concurrently": "^9.2.0",
    "nx": "21.2.2",
    "prettier": "^2.6.2",
    "tslib": "^2.3.0",
    "typescript": "~5.8.2"
  },
  "workspaces": [
    "apps/*",
    "libs/*",
    "services/*",
    "packages/*"
  ]
}
